% JRCLUST parameters 
% For a description of these parameters, including legal options, see https://jrclust.readthedocs.io/en/latest/parameters/index.html

% USAGE PARAMETERS
outputDir = []; % Directory in which to place output files (Will output to the same directory as this file if empty)
batchMode = 1; % Suppress message boxes in favor of console messages
exportResults = 1; % Export results (res) as a struct to the base workspace if true (You may not want this if you have a large dataset)
verbose = 1; % (formerly fVerbose) Be chatty when processing

% EXECUTION PARAMETERS
gpuLoadFactor = 1.3; % GPU memory usage factor (Use 1/gpuLoadFactor amount of GPU memory)
maxBytesLoad = []; % (formerly MAX_BYTES_LOAD) Maximum number of bytes to load into memory
maxSecLoad = []; % (formerly MAX_LOAD_SEC) Maximum sample duration (in s) to load into memory (Overrides maxBytesLoad if nonempty)
nThreadsGPU = 128; % (formerly nThreads) Number of GPU threads to use for clustering
ramToGPUFactor = 8; % (formerly nLoads_gpu) Ratio of RAM to GPU memory
randomSeed = 0; % Seed for the random number generator
useGPU = 1; % (formerly fGpu) Use GPU where appropriate
useParfor = 1; % (formerly fParfor) Use parfor where appropriate

% PROBE PARAMETERS
probePad = [11, 11]; % (formerly vrSiteHW) Recording contact pad size (in μm) (Height x width)
shankMap = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]; % (formerly viShank_site) Shank ID of each site
siteLoc = [1000, 0; 1000, 60; 1000, 90; 1000, 180; 1000, 210; 1000, 240; 1000, 270; 1000, 300; 1000, 360; 1000, 390; 1000, 420; 1000, 450; 1000, 510; 1000, 540; 1000, 570; 1000, 750; 1000, 780; 1000, 810; 1000, 840; 1000, 900; 1000, 930; 1000, 960; 1000, 1020; 1000, 1050; 1000, 1080; 1000, 1140; 1000, 1170; 1000, 1230; 1000, 1260; 1000, 1290; 1000, 1380; 1000, 1470; 1000, 1500; 1000, 1530; 1000, 1560; 1000, 1590; 1000, 1620; 1000, 1650; 1000, 1680; 1000, 1710; 1000, 1740; 1000, 1770; 1000, 1800; 1000, 1860; 1000, 1890; 1000, 1920; 1000, 1950; 1000, 1980; 1000, 2040; 1000, 2070; 1000, 2100; 1000, 2130; 1000, 2190; 1000, 2220; 1000, 2250; 1000, 2280; 1000, 2310; 1000, 2340; 1000, 2370; 1000, 2400; 1000, 2430; 1000, 2460; 1000, 2490; 1000, 2520; 1000, 2550; 1000, 2580; 1000, 2640; 1000, 2670; 1000, 2700; 1000, 2730; 1000, 2760; 1000, 2790; 1000, 2820; 1000, 2850; 1000, 2910; 1000, 2940; 1000, 3000; 1000, 3030; 1000, 3120; 1000, 3150; 1000, 3180; 1000, 3210; 1000, 3240; 1000, 3300; 1000, 3330; 1000, 3360; 1000, 3390; 1000, 3420; 1000, 3450; 1000, 3480; 1000, 3510; 1000, 3540; 1000, 3570; 1000, 3600; 1000, 3630; 1000, 3660; 1000, 3690; 1000, 3750; 1000, 3780; 1000, 3810; 1000, 3840; 1000, 3900; 1000, 3960; 1000, 3990; 1000, 4020; 1000, 4050; 1000, 4080; 1000, 4110; 1000, 4140; 1000, 4170; 1000, 4200; 1000, 4230; 1000, 4260; 1000, 4290; 1000, 4320; 1000, 4350; 1000, 4380; 1000, 4410; 1000, 4440; 1000, 4500; 1000, 4530; 1000, 4560; 1000, 4590; 1000, 4620; 1000, 4650; 1000, 4710; 1000, 4740; 1000, 4770; 1000, 4800; 1000, 4830; 1000, 4860; 1000, 4920; 1000, 4950; 1000, 4980; 1000, 5070; 1000, 5100; 1000, 5160; 1000, 5190; 1000, 5220; 1000, 5280; 1000, 5310; 1000, 5340; 1000, 5400; 1000, 5430; 1000, 5460; 1000, 5490; 1000, 5520; 1000, 5550; 1000, 5580; 1000, 5640; 1000, 5670; 1000, 5700; 1000, 5730; 1000, 5760; 1000, 5820; 1000, 5850; 1000, 5880; 1000, 5910; 1000, 5940; 1000, 5970; 2000, 0; 2000, 80; 2000, 120; 2000, 200; 2000, 240; 2000, 280; 2000, 360; 2000, 400; 2000, 480; 2000, 520; 2000, 560; 2000, 600; 2000, 640; 2000, 680; 2000, 760; 2000, 800; 2000, 840; 2000, 880; 2000, 1040; 2000, 1120; 2000, 1200; 2000, 1240; 2000, 1280; 2000, 1360; 2000, 1400; 2000, 1440; 2000, 1520; 2000, 1560; 2000, 1600; 2000, 1640; 2000, 1720; 2000, 1740; 2000, 1780; 2000, 1800; 2000, 1820; 2000, 1840; 2000, 1860; 2000, 1920; 2000, 1940; 2000, 1960; 2000, 1980; 2000, 2020; 2000, 2040; 2000, 2060; 2000, 2100; 2000, 2120; 2000, 2140; 2000, 2200; 2000, 2220; 2000, 2240; 2000, 2260; 2000, 2280; 2000, 2300; 2000, 2320; 2000, 2340; 2000, 2380; 2000, 2400; 2000, 2420; 2000, 2440; 2000, 2480; 2000, 2500; 2000, 2520; 2000, 2540; 2000, 2560; 2000, 2580; 2000, 2600; 2000, 2620; 2000, 2660; 2000, 2680; 2000, 2700; 2000, 2740; 2000, 2780; 2000, 2820; 2000, 2840; 2000, 2860; 2000, 2880; 2000, 2900; 2000, 2920; 2000, 2940; 2000, 2980; 2000, 3000; 2000, 3060; 2000, 3080; 2000, 3100; 2000, 3120; 2000, 3160; 2000, 3240; 2000, 3280; 2000, 3320; 2000, 3360; 2000, 3400; 2000, 3480; 2000, 3520; 2000, 3560; 2000, 3640; 2000, 3680; 2000, 3720; 2000, 3800; 2000, 3840; 2000, 3880; 2000, 3960; 2000, 4000; 2000, 4040; 2000, 4080; 2000, 4160; 2000, 4200; 2000, 4240; 2000, 4280; 2000, 4320; 2000, 4360; 2000, 4400; 2000, 4440; 2000, 4480; 2000, 4520; 2000, 4560; 2000, 4600; 2000, 4640; 2000, 4680; 2000, 4760; 2000, 4800; 2000, 4840; 2000, 4920; 2000, 4960; 2000, 5000; 2000, 5040; 2000, 5080; 2000, 5120; 2000, 5200; 2000, 5240; 2000, 5280; 2000, 5320; 2000, 5400; 2000, 5440; 2000, 5480; 2000, 5560; 2000, 5600; 2000, 5670; 2000, 5690; 2000, 5710; 2000, 5750; 2000, 5770; 2000, 5790; 2000, 5830; 2000, 5850; 2000, 5870; 2000, 5910; 2000, 5950; 2000, 6030; 2000, 6070; 2000, 6090; 2000, 6110; 2000, 6150; 2000, 6190; 2000, 6230; 2000, 6250; 2000, 6270; 2000, 6290; 2000, 6310; 2000, 6330; 2000, 6350; 2000, 6390; 2000, 6410; 2000, 6430; 2000, 6470; 2000, 6510; 2000, 6590; 2000, 6630; 2000, 6670; 2000, 6690; 2000, 6710; 2000, 6790; 2000, 6810; 2000, 6830; 2000, 6870; 2000, 6890; 2000, 6910; 2000, 6950; 2000, 6970; 2000, 6990; 2000, 7010; 2000, 7050; 2000, 7070; 2000, 7150; 2000, 7170; 2000, 7190; 2000, 7230; 2000, 7250; 2000, 7270; 2000, 7290; 2000, 7310; 2000, 7330; 2000, 7350; 2000, 7370; 2000, 7430; 2000, 7450; 2000, 7490; 2000, 7510; 2000, 7530; 2000, 7550; 2000, 7570; 2000, 7590; 2000, 7610; 2000, 7630; 2000, 7650; 2000, 7690; 2000, 7710; 2000, 7730; 2000, 7750; 2000, 7790; 2000, 7810; 2000, 7830; 2000, 7870; 2000, 7890; 2000, 7910; 2000, 7930; 2000, 7950; 2000, 7970; 2000, 8020; 2000, 8060; 2000, 8100; 2000, 8140; 2000, 8180; 2000, 8220; 2000, 8260; 2000, 8340; 2000, 8380; 2000, 8420; 2000, 8460; 2000, 8500; 2000, 8540; 2000, 8580; 2000, 8620; 2000, 8660; 2000, 8700; 2000, 8740; 2000, 8780; 2000, 8820; 2000, 8900; 2000, 8940; 2000, 8980; 2000, 9020; 2000, 9060; 2000, 9140; 2000, 9220; 2000, 9260; 2000, 9340; 2000, 9380; 2000, 9420; 2000, 9460; 2000, 9500; 2000, 9540; 2000, 9580; 2000, 9620; 2000, 9660; 2000, 9700; 2000, 9780; 2000, 9820; 2000, 9860; 2000, 9900; 2000, 9940; 2000, 10020; 2000, 10100; 2000, 10140; 2000, 10180; 2000, 10220; 2000, 10260; 2000, 10300; 2000, 10340; 2000, 10380; 2000, 10420; 2000, 10460]; % (formerly mrSiteXY) Site locations (in μm) (x values in the first column, y values in the second column)
siteMap = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431]; % (formerly viSite2Chan) Map of channel index to site ID (The mapping siteMap(i) = j corresponds to the statement 'site i is stored as channel j in the recording')

% RECORDING FILE PARAMETERS
bitScaling = 6.3; % (formerly uV_per_bit) ADC bit scaling factor (Conversion factor for ADC bit values to μV)
dataType = 'int16'; % (formerly vcDataType) Format of raw recordings
headerOffset = 0; % (formerly header_offset) Recording file header offset (in bytes)
nChans = 431; % Number of channels stored in recording file (Distinct from the number of AP sites)
rawRecordings = '../../../fuse_root2/concatenated_ss/fused_concat_dat/concat.dat'; % Path or paths to raw recordings to sort
recordingFormat = 'SpikeGLX'; % Format of raw recording
sampleRate = 20000; % (formerly sRateHz) Sampling rate (in Hz) of raw recording
tallSkinny = 1; % (formerly fTranspose_bin) Recording will be interpreted as nChannels x nSamples if true

% PREPROCESSING PARAMETERS
blankThresh = []; % (formerly blank_thresh) Threshold (in MADs) above which to reject samples exceeding channel median after filtering
filterType = 'bandpass'; % (formerly vcFilter) Type of filter to use on raw data
filtOrder = 4; % Bandpass filter order
freqLimBP = [300, 5000]; % (formerly freqLim) Frequency cutoffs for bandpass filter
ignoreChans = []; % (formerly viChanZero) Channel numbers to ignore manually
ignoreSites = []; % (formerly viSiteZero) Site IDs to ignore manually
fftThresh = 0; % (formerly fft_thresh) Threshold (in MADs of power-frequency product) above which to remove frequency outliers
freqLimNotch = []; % Frequency ranges to exclude for notch filter
freqLimStop = []; % Frequency range to exclude for band-stop filter
gainBoost = 1; % (formerly gain_boost) Scale factor to boost gain in raw recording (Used in filtering operation)
loadTimeLimits = []; % (formerly tlim_load) Time range (in s) of samples to load at once (All samples are loaded if empty)
nDiffOrder = 2; % (formerly nDiff_filt) Order for differentiator filter (Used if and only if filterType is 'sgdiff' or 'ndiff')
nSamplesPad = 100; % (formerly nPad_filt) Number of samples to overlap between chunks in large files
useElliptic = 0; % (formerly fEllip) Use elliptic (bandpass) filter if true (Uses Butterworth filter if false)
userFiltKernel = []; % (formerly vnFilter_user) User-specified filter kernel (Ignored unless filterType is 'user')

% SPIKE DETECTION PARAMETERS
blankPeriod = 5; % (formerly blank_period_ms) Duration of blanking period (in ms) when the common mean exceeds blankThresh
CARMode = 'median'; % (formerly vcCommonRef) The meaning of 'average' in 'common average reference'
evtDetectRad = 250; % (formerly maxDist_site_um) Maximum distance (in μm) to search over for duplicate peaks
evtWindow = [-0.5, 1.5]; % (formerly spkLim_ms) Time range (in ms) of filtered spike waveforms, centered at the peak
nSiteDir = 10.5; % (formerly maxSite) Number of neighboring sites to group in either direction (nSitesEvt is set to 1 + 2*nSiteDir - nSitesExcl)
nSitesExcl = {}; % (formerly nSites_ref) Number of sites to exclude from the spike waveform group for feature extraction
qqFactor = 6; % Spike detection threshold factor (Thr = qqFactor*med(abs(x-med(x)))/0.6745)
refracInt = 0.25; % (formerly spkRefrac_ms) Spike refractory period (in ms)
detectBipolar = 0; % (formerly fDetectBipolar) Detect positive as well as negative peaks
evtManualThresh = []; % (formerly spkThresh_uV) Manually-set spike detection threshold (in μV)
evtWindowRaw = [-0.5, 1.5]; % (formerly spkLim_raw_ms) Time range (in ms) of raw spike waveforms, centered at the peak
groupShank = 0; % (formerly fGroup_shank) Group all sites on the same shank if true
minNeighborsDetect = 0; % (formerly nneigh_min_detect) Minimum number of sample neighbors exceeding threshold for a sample to be considered a peak
realignTraces = 0; % (formerly fRealign_spk) Realign spike traces after subtracting local CAR (Realign if 1, perform subpixel interpolation if 2)
spikeThreshMax = []; % (formerly spkThresh_max_uV) Maximum absolute amplitude (in μV) permitted for spikes
threshFile = ''; % (formerly vcFile_thresh) Path to .mat file storing the spike detection threshold (Created by preview GUI)

% FEATURE EXTRACTION PARAMETERS
clusterFeature = 'pca'; % (formerly vcFet) The feature to extract from your spike waveforms in order to cluster them
evtGroupRad = 250; % (formerly maxDist_site_spk_um) Maximum distance (in μm) for extracting spike waveforms
nPCsPerSite = 3; % (formerly nPcPerChan) Number of principal components to compute per site
extractAfterDetect = 0; % Extract features only after detecting all spikes across all files if true (This is effectively set to true if you specify clusterFeature='gpca')
interpPC = 1; % (formerly fInterp_fet) Interpolate 1st principal vector to maximize projection of spikes if true
nPeaksFeatures = 2; % (formerly nFet_use) Number of potential peaks to use when computing features

% CLUSTERING PARAMETERS
autoMergeBy = 'pearson'; % (formerly autoMergeCriterion) Metric to use for automerging clusters based on average waveform
distCut = 2; % (formerly dc_percent) Percentile of pairwise distances between spikes on a site to use as a cutoff distance
evtMergeRad = 70; % (formerly maxDist_site_merge_um) Maximum distance (in μm) to consider for merging spike waveforms
log10DeltaCut = 0.6; % (formerly delta1_cut) Log10 of delta cutoff (Spikes with delta values below this cutoff will not be considered as cluster centers)
log10RhoCut = -2.5; % (formerly rho_cut) Log10 of rho cutoff (Spikes with rho values below this cutoff will not be considered as cluster centers)
maxUnitSim = 0.90; % (formerly maxWavCor) Threshold for merging two units having similar spike waveforms (Units with a similiarity score above this value will be merged)
minClusterSize = 300; % (formerly min_count) Minimum number of spikes per cluster (Automatically set to the maximum of this value and twice the number of features)
nClusterIntervals = 4; % (formerly nTime_clu) Number of intervals to divide the recording into around a spike (When clustering, take the 1/nClusterIntervals fraction of all spikes around a spiking event to compute distance)
RDDetrendMode = 'global'; % (formerly vcDetrend_postclu) Detrending mode to apply to rho-delta values in order to determine cluster centers
driftMerge = 1; % (formerly fDrift_merge) Compute multiple waveforms at three drift locations based on the spike position if true
evtWindowMergeFactor = 1; % (formerly spkLim_factor_merge) Ratio of samples to take when computing correlation
maxClustersSite = 20; % (formerly maxCluPerSite) Maximum number of cluster centers computed per site (Used if RDDetrendMode is 'local')
meanInterpFactor = 1; % (formerly nInterp_merge) Interpolation factor for mean unit waveforms (Set to 1 to disable)
minSitesWeightFeatures = 5; % (formerly min_sites_mask) Minimum number of sites to have if using weightFeatures (Ignored if weightFeatures is false)
nPassesMerge = 10; % (formerly nRepeat_merge) Number of times to repeat automatic waveform-based merging
outlierThresh = 5.5; % (formerly thresh_mad_clu) Threshold (in MADs) to remove outlier spikes for each cluster
useGlobalDistCut = 0; % (formerly fDc_global) Use a global distance cutoff for all sites if true
weightFeatures = 0; % (formerly fSpatialMask_clu) Weight display features by distance from site if true

% CURATION PARAMETERS
figList = {'FigCorr', 'FigHist', 'FigISI', 'FigMap', 'FigPos', 'FigProj', 'FigRD', 'FigSim', 'FigTime', 'FigWav'}; % List of tags of figures to display in feature view
figPos = {[0.85, 0.25, 0.15, 0.25], [0.85, 0.75, 0.15, 0.25], [0.85, 0.5, 0.15, 0.25], [0, 0.5, 0.15, 0.5], [0, 0, 0.15, 0.5], [0.5, 0.2, 0.35, 0.5], [0.85, 0, 0.15, 0.25], [0.5, 0.7, 0.35, 0.3], [0.15, 0, 0.7, 0.2], [0.15, 0.2, 0.35, 0.8]}; % List of figure positions (omit or leave blank to use recommended positions given your figure list)
frFilterShape = 'triangle'; % (formerly filter_shape_rate) Kernel shape for temporal averaging (Used in estimation of the firing rate of a given unit)
frPeriod = 2; % (formerly filter_sec_rate) Time period (in s) over which to determine firing rate (Used in estimation of the firing rate of a given unit)
frSampleRate = 1000; % (formerly sRateHz_rate) Resampling rate (in Hz) for estimating the firing rate (Used in estimation of the firing rate of a given unit)

% DISPLAY PARAMETERS
dispTimeLimits = [0, 0.2]; % (formerly tlim) Time range (in ms) to display
nSpikesFigProj = 500; % (formerly nShow_proj) Maximum number of spikes per cluster to display in the feature projection view
nSpikesFigWav = 30; % (formerly nSpk_show) Maximum number of spikes per cluster to display generally
colorMap = [0.5, 0.5, 0.5; 0, 0, 0; 1, 0, 0]; % (formerly mrColor_proj) RGB color map for background, primary selected, and secondary selected spikes (The first three values are the R values, the next three are the G values, and the last three are the B values.)
corrRange = [0.9, 1]; % (formerly corrLim) Correlation score range to distinguish by color map
dispFeature = 'vpp'; % (formerly vcFet_show) Feature to display in the feature projection plot
dispFilter = 'bandpass'; % (formerly vcFilter_show) Filter to apply in traces plot
maxAmp = 250; % Amplitude scale (in μV)
nSitesFigProj = 5; % Number of sites to show in feature projection view
nSpikesFigISI = 200; % Maximum number of spikes to show in ISI view
pcPair = [1, 2]; % Pair of PCs to display
projTimeLimits = []; % (formerly tLimFigProj) Time range (in s) to display in feature projection view
showRaw = 0; % (formerly fWav_raw_show) Show raw traces in waveform view if true
showSpikeCount = 1; % (formerly fText) Show spike count per unit in waveform plot
umPerPix = 20; % (formerly um_per_pix) Vertical site center-to-center spacing

% TRIAL PARAMETERS
psthTimeLimits = []; % (formerly tlim_psth) Time range (in s) over which to display PSTH
trialFile = ''; % (formerly vcFile_trial) Path to file containing trial data (Can be .mat or .csv, must contain timestamps of trials in units of s)
psthTimeBin = 0.01; % (formerly tbin_psth) Time bin (in s) for PSTH view
psthXTick = 0.2; % (formerly xtick_psth) PSTH time tick mark spacing

% VALIDATION PARAMETERS
gtFile = ''; % (formerly vcFile_gt) Path to file containing ground-truth data

% PREVIEW PARAMETERS
nLoadsMaxPreview = 30; % (formerly nLoads_max_preview) Number of time segments to load in preview
nSecsLoadPreview = 1; % (formerly sec_per_load_preview) Number of seconds to load in preview
siteCorrThresh = 0; % (formerly thresh_corr_bad_site) Threshold to reject bad sites based on maximum correlation with neighboring sites (Set to 0 to disable)

% TRACES PARAMETERS
nSkip = 1; % (formerly nSkip_show) Show every nSkip samples when plotting traces
nSegmentsTraces = 1; % (formerly nTime_traces) Number of time segments to display in traces view (A value of 1 shows one continuous time segment)

% LFP PARAMETERS
lfpSampleRate = 2500; % (formerly sRateHz_lfp) Sampling rate for LFP channels

% AUX CHANNEL PARAMETERS
auxChan = []; % (formerly iChan_aux) Auxiliary channel index
auxFile = ''; % (formerly vcFile_aux) Path to file containing auxiliary channel
auxLabel = 'Aux channel'; % (formerly vcLabel_aux) Label for auxiliary channel data
auxSampleRate = []; % (formerly sRateHz_aux) Sample rate for auxiliary file
auxScale = 1; % (formerly vrScale_aux) Scale factor for aux data
nClustersShowAux = 10; % (formerly nClu_show_aux) Number of clusters to show in the aux vs. firing rate correlation

